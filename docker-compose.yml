version: '3.8'

services:
  db:
    container_name: db
    image: postgres:14.7-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=esap
    ports: ["15432:5432"]
    volumes:
      - db-data:/var/lib/postgresql/data
    command: >
      bash -c '
        echo "CREATE DATABASE esap;" > /docker-entrypoint-initdb.d/init_db.sql
        echo "\c esap;" >> /docker-entrypoint-initdb.d/init_db.sql
        exec docker-entrypoint.sh postgres
      '
    restart: unless-stopped

  frontend:
    container_name: frontend
    build:
      context: frontend/esap-admin
      dockerfile: /Dockerfile
    ports: ["3000:3000"]
    volumes:
      - /app/node_modules
      - ./frontend/esap-admin:/app

  esap-core:
    container_name: esap-core
    build:
      context: backend/esap-core
      dockerfile: /Dockerfile
    restart: always
    ports: ["8080:8080"]
    environment:
      - SERVER_PORT= 8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/esap
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@mail.ru
      PGADMIN_DEFAULT_PASSWORD: postgres
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  db-data:
  pgadmin-data: